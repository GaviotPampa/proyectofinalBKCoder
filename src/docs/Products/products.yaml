tags:
  - name: Product
    sumary: Everything about products
paths:
  /api/products:
    get:
      tags:
        - Product
      summary: Get all products.Obtiene todos los productos
      responses:
        "200":
          description: Los productos fueron obtenidos satisfactoriamente de la base de datos
        "404":
          description: Not Found Products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error del servidor
    post:
      tags:
        - Product
      summary: Add a new product to the database
      responses:
        "200":
          description: Create a new product in the database
        "500":
          description: Error del servidor
  /api/products/{:pid}:
    get:
      tags:
        - Product
      sumary: Obtiene un sólo producto por su Id
      parameters:
        - name: pid
          in: path
          required: true
          description: id del producto que se desee solicitar
          schema:
            $type: String
      responses:
        "200":
          description: Product encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
    put:
      tags:
        - Product
      summary: Update a product in the database
      parameters:
        - name: pid
          in: path
          required: true
          description: id del producto que se quiere actualizar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/requestBodies/update"
      responses:
        "200":
          description: Update a product in the database for id
        "500":
          description: Error del servidor
    delete:
      tags:
        - Product
      summary: Delete a product in the database by its id
      responses:
        "200":
          description: Delete a product in the database
        "500":
          description: Error al eliminar product
    update:
    type: object
    properties:
      _id:
        type: ObjectId
        description: Id associated with product,  automatically generated from mongodb
      titulo:
        type: string
        description: Nominl product
      descripcion:
        type: string
        description: Product description
      importe:
        type: number
        description: Precio del producto
      codigo:
        type: string
        description: codigo de identificacion unico del producto
      estado:
        type: boolean
        description: Estado del producto true or false
      stock:
        type: number
        description: cantidad disponible del producto
      categoria:
        type: string
        description: Clasificación del producto
      owner:
        type: Schema.Type.ObjectId
        ref: user
        default: admin
      thumbnails:
        type: String
        default: []
      inCart:
        type: boolean
        description: si el producto esta en el carrito de compras
    example:
      _id: ObjectId('6511bb3867bd881e1a572d52')
      titulo: Mochila Urbana
      importe: 15000
      codigo: abcd123
      estado: true
      stock: 1
      categoria: Mochilas
      owner: user
      thumbnails: Array
      inCart: false
  /add/{:idCart}/{:idProduct}/quantity/{:quantity}:
    post:
      tags:
        - Product
      summary: Agrega productos al carrito de compras
      parameters:
        - name: cid
        - name: quantity
        - name: pid
          in: path
          required: true
          description: id del producto que se desee sumar, id del carrito de compras y cantidad
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/requestBodies/update"
      responses:
        "200":
          description: Update a product in the database for quantity
        "500":
          description: Error del servidor
    update:
    type: object
    properties:
      _id:
        type: ObjectId
        description: Id associated with product,  automatically generated from mongodb
      titulo:
        type: string
        description: Nominl product
      descripcion:
        type: string
        description: Product description
      importe:
        type: number
        description: Precio del producto
      codigo:
        type: string
        description: codigo de identificacion unico del producto
      estado:
        type: boolean
        description: Estado del producto true or false
      stock:
        type: number
        description: cantidad disponible del producto
      categoria:
        type: string
        description: Clasificación del producto
      owner:
        type: Schema.Type.ObjectId
        ref: user
        default: admin
      thumbnails:
        type: String
        default: []
      inCart:
        type: boolean
        description: si el producto esta en el carrito de compras
    example:
      _id: ObjectId('6511bb3867bd881e1a572d52')
      importe: 15000
      stock: 1
      owner: user
      responses:
        "200":
          description: El producto ${idProduct} fue actualizado en el carrito de compras
        "400":
          description: No se puede agregar cantidad del producto al carrito de compras
